{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbode/Development/projects/encounter_builder/encounter-builder/src/components/EncounterStats.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EncounterStats = ({\n  encounter,\n  party\n}) => {\n  const getRecommendedPerHero = organization => {\n    switch (organization) {\n      case 'minion':\n        return {\n          minOrgs: 0.5,\n          maxOrgs: 2,\n          minCreaturesPerOrg: 4,\n          maxCreaturesPerOrg: 8,\n          description: '≈1-2 minion groups per hero (4-8 minions per group)'\n        };\n      case 'horde':\n        return {\n          minOrgs: 0.5,\n          maxOrgs: 1,\n          minCreaturesPerOrg: 2,\n          maxCreaturesPerOrg: 2,\n          description: '≈1 horde per hero (2 creatures per horde)'\n        };\n      case 'platoon':\n        return {\n          minOrgs: 0.5,\n          maxOrgs: 1,\n          minCreaturesPerOrg: 1,\n          maxCreaturesPerOrg: 1,\n          description: '≈1 platoon per hero (1 creature per platoon)'\n        };\n      case 'elite':\n        return {\n          minOrgs: 0.25,\n          maxOrgs: 0.5,\n          minCreaturesPerOrg: 1,\n          maxCreaturesPerOrg: 1,\n          description: '≈0.5 elite per hero (1 creature per elite)'\n        };\n      case 'leader':\n        return {\n          minOrgs: 0.25,\n          maxOrgs: 0.5,\n          minCreaturesPerOrg: 1,\n          maxCreaturesPerOrg: 1,\n          description: '≈0.5 leader per hero (1 creature per leader)'\n        };\n      case 'solo':\n        return {\n          minOrgs: 0.17,\n          maxOrgs: 0.25,\n          minCreaturesPerOrg: 1,\n          maxCreaturesPerOrg: 1,\n          description: '≈0.25 solo per hero (1 creature per solo)'\n        };\n      default:\n        return {\n          minOrgs: 0,\n          maxOrgs: 1,\n          minCreaturesPerOrg: 1,\n          maxCreaturesPerOrg: 1,\n          description: 'Varies by organization'\n        };\n    }\n  };\n\n  // Calculate organization statistics\n  const organizationStats = {};\n  const roleStats = {};\n  encounter.creatures.forEach(creature => {\n    const org = creature.monster.organization;\n    const role = creature.monster.role;\n\n    // Organization stats\n    if (!organizationStats[org]) {\n      organizationStats[org] = {\n        creatureCount: 0,\n        organizationCount: 0,\n        creaturesPerHero: 0,\n        organizationsPerHero: 0,\n        recommended: getRecommendedPerHero(org)\n      };\n    }\n    organizationStats[org].creatureCount += creature.quantity;\n\n    // Role stats\n    if (!roleStats[role]) {\n      roleStats[role] = 0;\n    }\n    roleStats[role] += creature.quantity;\n  });\n\n  // Calculate organizations per hero and creatures per organization\n  Object.keys(organizationStats).forEach(org => {\n    const stats = organizationStats[org];\n    stats.creaturesPerHero = stats.creatureCount / party.heroCount;\n\n    // Calculate how many organizations we have based on creature count and organization type\n    if (org === 'minion') {\n      // Minions come in groups of 4, so divide by 4 to get number of minion groups\n      stats.organizationCount = Math.ceil(stats.creatureCount / 4);\n    } else if (org === 'horde') {\n      // Hordes typically have 2 creatures\n      stats.organizationCount = Math.ceil(stats.creatureCount / 2);\n    } else {\n      // Other organizations (platoon, elite, leader, solo) are 1 creature per organization\n      stats.organizationCount = stats.creatureCount;\n    }\n    stats.organizationsPerHero = stats.organizationCount / party.heroCount;\n  });\n  const getStatusColor = (current, recommended) => {\n    if (current < recommended.minOrgs) return 'text-yellow-400'; // Too few\n    if (current > recommended.maxOrgs) return 'text-red-400'; // Too many\n    return 'text-green-400'; // Good\n  };\n  const getStatusText = (current, recommended) => {\n    if (current < recommended.minOrgs) return 'Too Few';\n    if (current > recommended.maxOrgs) return 'Too Many';\n    return 'Good';\n  };\n  const totalCreatures = encounter.creatures.reduce((sum, c) => sum + c.quantity, 0);\n  const totalOrganizations = Object.values(organizationStats).reduce((sum, stats) => sum + stats.organizationCount, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-700 p-4 rounded-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-white font-semibold mb-4\",\n      children: \"Encounter Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-2 gap-4 mb-6 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [\"Party ES: \", party.encounterStrength]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [\"Encounter EV: \", encounter.totalEV]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [\"Ratio: \", (encounter.totalEV / party.encounterStrength).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [\"Total Creatures: \", totalCreatures]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-300\",\n          children: [\"Total Organizations: \", totalOrganizations]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white font-medium mb-3\",\n        children: \"Organization Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: Object.entries(organizationStats).map(([org, stats]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-600 p-3 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-white font-medium capitalize\",\n              children: org\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-sm font-medium ${getStatusColor(stats.organizationsPerHero, stats.recommended)}`,\n              children: getStatusText(stats.organizationsPerHero, stats.recommended)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300 text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Creatures: \", stats.creatureCount, \" total (\", stats.creaturesPerHero.toFixed(2), \" per hero)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Organizations: \", stats.organizationCount, \" groups (\", stats.organizationsPerHero.toFixed(2), \" per hero)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-350 text-xs\",\n              children: [\"Recommended: \", stats.recommended.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, org, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white font-medium mb-3\",\n        children: \"Organization Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-300 text-sm mb-3\",\n        children: [\"Total Organizations: \", totalOrganizations]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: Object.entries(organizationStats).map(([org, stats]) => {\n          const percentage = stats.organizationCount / totalOrganizations * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20 text-gray-300 text-sm capitalize\",\n              children: org\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 bg-gray-600 rounded-full h-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-500 h-4 rounded-full transition-all duration-300\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 text-gray-300 text-sm text-right\",\n              children: stats.organizationCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, org, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white font-medium mb-3\",\n        children: \"Role Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: Object.entries(roleStats).map(([role, count]) => {\n          const percentage = count / totalCreatures * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-20 text-gray-300 text-sm capitalize\",\n              children: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-1 bg-gray-600 rounded-full h-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-green-500 h-4 rounded-full transition-all duration-300\",\n                style: {\n                  width: `${percentage}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-12 text-gray-300 text-sm text-right\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this)]\n          }, role, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-600 p-3 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-white font-medium mb-2\",\n        children: \"Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-gray-300 text-sm space-y-1\",\n        children: [Object.entries(organizationStats).map(([org, stats]) => {\n          const status = getStatusText(stats.organizationsPerHero, stats.recommended);\n          if (status !== 'Good') {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-red-400\",\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"capitalize\",\n                children: org\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this), \": \", status.toLowerCase(), \" - \", stats.recommended.description]\n            }, org, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        }), Object.entries(organizationStats).every(([, stats]) => getStatusText(stats.organizationsPerHero, stats.recommended) === 'Good') && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-green-400\",\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), \"Organization balance looks good!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_c = EncounterStats;\nvar _c;\n$RefreshReg$(_c, \"EncounterStats\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EncounterStats","encounter","party","getRecommendedPerHero","organization","minOrgs","maxOrgs","minCreaturesPerOrg","maxCreaturesPerOrg","description","organizationStats","roleStats","creatures","forEach","creature","org","monster","role","creatureCount","organizationCount","creaturesPerHero","organizationsPerHero","recommended","quantity","Object","keys","stats","heroCount","Math","ceil","getStatusColor","current","getStatusText","totalCreatures","reduce","sum","c","totalOrganizations","values","className","children","fileName","_jsxFileName","lineNumber","columnNumber","encounterStrength","totalEV","toFixed","entries","map","percentage","style","width","count","status","toLowerCase","every","_c","$RefreshReg$"],"sources":["/Users/aaronbode/Development/projects/encounter_builder/encounter-builder/src/components/EncounterStats.tsx"],"sourcesContent":["import React from 'react';\nimport { Encounter, Party } from '../types';\n\ninterface EncounterStatsProps {\n  encounter: Encounter;\n  party: Party;\n}\n\ninterface OrganizationStats {\n  [key: string]: {\n    creatureCount: number;\n    organizationCount: number;\n    creaturesPerHero: number;\n    organizationsPerHero: number;\n    recommended: {\n      minOrgs: number;\n      maxOrgs: number;\n      minCreaturesPerOrg: number;\n      maxCreaturesPerOrg: number;\n      description: string;\n    };\n  };\n}\n\ninterface RoleStats {\n  [key: string]: number;\n}\n\nexport const EncounterStats: React.FC<EncounterStatsProps> = ({ encounter, party }) => {\n  const getRecommendedPerHero = (organization: string) => {\n    switch (organization) {\n      case 'minion':\n        return { \n          minOrgs: 0.5, \n          maxOrgs: 2, \n          minCreaturesPerOrg: 4, \n          maxCreaturesPerOrg: 8,\n          description: '≈1-2 minion groups per hero (4-8 minions per group)' \n        };\n      case 'horde':\n        return { \n          minOrgs: 0.5, \n          maxOrgs: 1, \n          minCreaturesPerOrg: 2, \n          maxCreaturesPerOrg: 2,\n          description: '≈1 horde per hero (2 creatures per horde)' \n        };\n      case 'platoon':\n        return { \n          minOrgs: 0.5, \n          maxOrgs: 1, \n          minCreaturesPerOrg: 1, \n          maxCreaturesPerOrg: 1,\n          description: '≈1 platoon per hero (1 creature per platoon)' \n        };\n      case 'elite':\n        return { \n          minOrgs: 0.25, \n          maxOrgs: 0.5, \n          minCreaturesPerOrg: 1, \n          maxCreaturesPerOrg: 1,\n          description: '≈0.5 elite per hero (1 creature per elite)' \n        };\n      case 'leader':\n        return { \n          minOrgs: 0.25, \n          maxOrgs: 0.5, \n          minCreaturesPerOrg: 1, \n          maxCreaturesPerOrg: 1,\n          description: '≈0.5 leader per hero (1 creature per leader)' \n        };\n      case 'solo':\n        return { \n          minOrgs: 0.17, \n          maxOrgs: 0.25, \n          minCreaturesPerOrg: 1, \n          maxCreaturesPerOrg: 1,\n          description: '≈0.25 solo per hero (1 creature per solo)' \n        };\n      default:\n        return { \n          minOrgs: 0, \n          maxOrgs: 1, \n          minCreaturesPerOrg: 1, \n          maxCreaturesPerOrg: 1,\n          description: 'Varies by organization' \n        };\n    }\n  };\n\n  // Calculate organization statistics\n  const organizationStats: OrganizationStats = {};\n  const roleStats: RoleStats = {};\n  \n  encounter.creatures.forEach(creature => {\n    const org = creature.monster.organization;\n    const role = creature.monster.role;\n    \n    // Organization stats\n    if (!organizationStats[org]) {\n      organizationStats[org] = {\n        creatureCount: 0,\n        organizationCount: 0,\n        creaturesPerHero: 0,\n        organizationsPerHero: 0,\n        recommended: getRecommendedPerHero(org)\n      };\n    }\n    organizationStats[org].creatureCount += creature.quantity;\n    \n    // Role stats\n    if (!roleStats[role]) {\n      roleStats[role] = 0;\n    }\n    roleStats[role] += creature.quantity;\n  });\n  \n  // Calculate organizations per hero and creatures per organization\n  Object.keys(organizationStats).forEach(org => {\n    const stats = organizationStats[org];\n    stats.creaturesPerHero = stats.creatureCount / party.heroCount;\n    \n    // Calculate how many organizations we have based on creature count and organization type\n    if (org === 'minion') {\n      // Minions come in groups of 4, so divide by 4 to get number of minion groups\n      stats.organizationCount = Math.ceil(stats.creatureCount / 4);\n    } else if (org === 'horde') {\n      // Hordes typically have 2 creatures\n      stats.organizationCount = Math.ceil(stats.creatureCount / 2);\n    } else {\n      // Other organizations (platoon, elite, leader, solo) are 1 creature per organization\n      stats.organizationCount = stats.creatureCount;\n    }\n    \n    stats.organizationsPerHero = stats.organizationCount / party.heroCount;\n  });\n\n  const getStatusColor = (current: number, recommended: { minOrgs: number; maxOrgs: number }) => {\n    if (current < recommended.minOrgs) return 'text-yellow-400'; // Too few\n    if (current > recommended.maxOrgs) return 'text-red-400'; // Too many\n    return 'text-green-400'; // Good\n  };\n\n  const getStatusText = (current: number, recommended: { minOrgs: number; maxOrgs: number }) => {\n    if (current < recommended.minOrgs) return 'Too Few';\n    if (current > recommended.maxOrgs) return 'Too Many';\n    return 'Good';\n  };\n\n  const totalCreatures = encounter.creatures.reduce((sum, c) => sum + c.quantity, 0);\n  const totalOrganizations = Object.values(organizationStats).reduce((sum, stats) => sum + stats.organizationCount, 0);\n\n  return (\n    <div className=\"bg-gray-700 p-4 rounded-md\">\n      <h3 className=\"text-white font-semibold mb-4\">Encounter Analysis</h3>\n      \n      {/* Basic Stats */}\n      <div className=\"grid grid-cols-2 gap-4 mb-6 text-sm\">\n        <div>\n          <p className=\"text-gray-300\">Party ES: {party.encounterStrength}</p>\n          <p className=\"text-gray-300\">Encounter EV: {encounter.totalEV}</p>\n        </div>\n        <div>\n          <p className=\"text-gray-300\">Ratio: {(encounter.totalEV / party.encounterStrength).toFixed(2)}</p>\n          <p className=\"text-gray-300\">Total Creatures: {totalCreatures}</p>\n          <p className=\"text-gray-300\">Total Organizations: {totalOrganizations}</p>\n        </div>\n      </div>\n\n      {/* Organization Analysis */}\n      <div className=\"mb-6\">\n        <h4 className=\"text-white font-medium mb-3\">Organization Analysis</h4>\n        <div className=\"space-y-3\">\n          {Object.entries(organizationStats).map(([org, stats]) => (\n            <div key={org} className=\"bg-gray-600 p-3 rounded\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-white font-medium capitalize\">{org}</span>\n                <span className={`text-sm font-medium ${getStatusColor(stats.organizationsPerHero, stats.recommended)}`}>\n                  {getStatusText(stats.organizationsPerHero, stats.recommended)}\n                </span>\n              </div>\n              <div className=\"text-gray-300 text-sm\">\n                <p>Creatures: {stats.creatureCount} total ({stats.creaturesPerHero.toFixed(2)} per hero)</p>\n                <p>Organizations: {stats.organizationCount} groups ({stats.organizationsPerHero.toFixed(2)} per hero)</p>\n                <p className=\"text-gray-350 text-xs\">Recommended: {stats.recommended.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Organization Distribution Chart */}\n      <div className=\"mb-6\">\n        <h4 className=\"text-white font-medium mb-3\">Organization Distribution</h4>\n        <div className=\"text-gray-300 text-sm mb-3\">Total Organizations: {totalOrganizations}</div>\n        <div className=\"space-y-2\">\n          {Object.entries(organizationStats).map(([org, stats]) => {\n            const percentage = (stats.organizationCount / totalOrganizations) * 100;\n            return (\n              <div key={org} className=\"flex items-center gap-3\">\n                <div className=\"w-20 text-gray-300 text-sm capitalize\">{org}</div>\n                <div className=\"flex-1 bg-gray-600 rounded-full h-4\">\n                  <div \n                    className=\"bg-blue-500 h-4 rounded-full transition-all duration-300\"\n                    style={{ width: `${percentage}%` }}\n                  ></div>\n                </div>\n                <div className=\"w-12 text-gray-300 text-sm text-right\">{stats.organizationCount}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Role Distribution Chart */}\n      <div className=\"mb-6\">\n        <h4 className=\"text-white font-medium mb-3\">Role Distribution</h4>\n        <div className=\"space-y-2\">\n          {Object.entries(roleStats).map(([role, count]) => {\n            const percentage = (count / totalCreatures) * 100;\n            return (\n              <div key={role} className=\"flex items-center gap-3\">\n                <div className=\"w-20 text-gray-300 text-sm capitalize\">{role}</div>\n                <div className=\"flex-1 bg-gray-600 rounded-full h-4\">\n                  <div \n                    className=\"bg-green-500 h-4 rounded-full transition-all duration-300\"\n                    style={{ width: `${percentage}%` }}\n                  ></div>\n                </div>\n                <div className=\"w-12 text-gray-300 text-sm text-right\">{count}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Recommendations */}\n      <div className=\"bg-gray-600 p-3 rounded\">\n        <h4 className=\"text-white font-medium mb-2\">Recommendations</h4>\n        <ul className=\"text-gray-300 text-sm space-y-1\">\n          {Object.entries(organizationStats).map(([org, stats]) => {\n            const status = getStatusText(stats.organizationsPerHero, stats.recommended);\n            if (status !== 'Good') {\n              return (\n                <li key={org} className=\"flex items-center gap-2\">\n                  <span className=\"text-red-400\">•</span>\n                  <span className=\"capitalize\">{org}</span>: {status.toLowerCase()} - {stats.recommended.description}\n                </li>\n              );\n            }\n            return null;\n          })}\n          {Object.entries(organizationStats).every(([, stats]) => \n            getStatusText(stats.organizationsPerHero, stats.recommended) === 'Good'\n          ) && (\n            <li className=\"flex items-center gap-2\">\n              <span className=\"text-green-400\">•</span>\n              Organization balance looks good!\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}