{"ast":null,"code":"export const calculateEncounterStrength=party=>{// Base ES calculation: 4 + (2 * level) per hero\nconst baseES=party.heroCount*(4+2*party.heroLevel);// Add ES for Victories: every 2 Victories = +1 hero's ES\nconst victoryBonus=Math.floor(party.victories/2)*(4+2*party.heroLevel);return baseES+victoryBonus;};export const determineEncounterDifficulty=(partyES,encounterEV,partyLevel)=>{const oneHeroES=4+2*partyLevel;const threeHeroES=oneHeroES*3;if(encounterEV<partyES-oneHeroES){return'trivial';}else if(encounterEV<partyES){return'easy';}else if(encounterEV<=partyES+oneHeroES){return'standard';}else if(encounterEV<=partyES+threeHeroES){return'hard';}else{return'extreme';}};export const getDifficultyColor=difficulty=>{switch(difficulty){case'trivial':return'#4ade80';// green\ncase'easy':return'#22c55e';// green-500\ncase'standard':return'#eab308';// yellow\ncase'hard':return'#f97316';// orange\ncase'extreme':return'#ef4444';// red\ndefault:return'#6b7280';// gray\n}};","map":{"version":3,"names":["calculateEncounterStrength","party","baseES","heroCount","heroLevel","victoryBonus","Math","floor","victories","determineEncounterDifficulty","partyES","encounterEV","partyLevel","oneHeroES","threeHeroES","getDifficultyColor","difficulty"],"sources":["/Users/aaronbode/Development/projects/encounter_builder/encounter-builder/src/utils/encounterCalculations.ts"],"sourcesContent":["import { Party, Encounter } from '../types';\n\nexport const calculateEncounterStrength = (party: Omit<Party, 'encounterStrength'>): number => {\n  // Base ES calculation: 4 + (2 * level) per hero\n  const baseES = party.heroCount * (4 + (2 * party.heroLevel));\n  \n  // Add ES for Victories: every 2 Victories = +1 hero's ES\n  const victoryBonus = Math.floor(party.victories / 2) * (4 + (2 * party.heroLevel));\n  \n  return baseES + victoryBonus;\n};\n\nexport const determineEncounterDifficulty = (partyES: number, encounterEV: number, partyLevel: number): 'trivial' | 'easy' | 'standard' | 'hard' | 'extreme' => {\n  const oneHeroES = 4 + (2 * partyLevel);\n  const threeHeroES = oneHeroES * 3;\n  \n  if (encounterEV < partyES - oneHeroES) {\n    return 'trivial';\n  } else if (encounterEV < partyES) {\n    return 'easy';\n  } else if (encounterEV <= partyES + oneHeroES) {\n    return 'standard';\n  } else if (encounterEV <= partyES + threeHeroES) {\n    return 'hard';\n  } else {\n    return 'extreme';\n  }\n};\n\nexport const getDifficultyColor = (difficulty: string): string => {\n  switch (difficulty) {\n    case 'trivial':\n      return '#4ade80'; // green\n    case 'easy':\n      return '#22c55e'; // green-500\n    case 'standard':\n      return '#eab308'; // yellow\n    case 'hard':\n      return '#f97316'; // orange\n    case 'extreme':\n      return '#ef4444'; // red\n    default:\n      return '#6b7280'; // gray\n  }\n}; "],"mappings":"AAEA,MAAO,MAAM,CAAAA,0BAA0B,CAAIC,KAAuC,EAAa,CAC7F;AACA,KAAM,CAAAC,MAAM,CAAGD,KAAK,CAACE,SAAS,EAAI,CAAC,CAAI,CAAC,CAAGF,KAAK,CAACG,SAAU,CAAC,CAE5D;AACA,KAAM,CAAAC,YAAY,CAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACO,SAAS,CAAG,CAAC,CAAC,EAAI,CAAC,CAAI,CAAC,CAAGP,KAAK,CAACG,SAAU,CAAC,CAElF,MAAO,CAAAF,MAAM,CAAGG,YAAY,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAI,4BAA4B,CAAGA,CAACC,OAAe,CAAEC,WAAmB,CAAEC,UAAkB,GAA2D,CAC9J,KAAM,CAAAC,SAAS,CAAG,CAAC,CAAI,CAAC,CAAGD,UAAW,CACtC,KAAM,CAAAE,WAAW,CAAGD,SAAS,CAAG,CAAC,CAEjC,GAAIF,WAAW,CAAGD,OAAO,CAAGG,SAAS,CAAE,CACrC,MAAO,SAAS,CAClB,CAAC,IAAM,IAAIF,WAAW,CAAGD,OAAO,CAAE,CAChC,MAAO,MAAM,CACf,CAAC,IAAM,IAAIC,WAAW,EAAID,OAAO,CAAGG,SAAS,CAAE,CAC7C,MAAO,UAAU,CACnB,CAAC,IAAM,IAAIF,WAAW,EAAID,OAAO,CAAGI,WAAW,CAAE,CAC/C,MAAO,MAAM,CACf,CAAC,IAAM,CACL,MAAO,SAAS,CAClB,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,kBAAkB,CAAIC,UAAkB,EAAa,CAChE,OAAQA,UAAU,EAChB,IAAK,SAAS,CACZ,MAAO,SAAS,CAAE;AACpB,IAAK,MAAM,CACT,MAAO,SAAS,CAAE;AACpB,IAAK,UAAU,CACb,MAAO,SAAS,CAAE;AACpB,IAAK,MAAM,CACT,MAAO,SAAS,CAAE;AACpB,IAAK,SAAS,CACZ,MAAO,SAAS,CAAE;AACpB,QACE,MAAO,SAAS,CAAE;AACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}