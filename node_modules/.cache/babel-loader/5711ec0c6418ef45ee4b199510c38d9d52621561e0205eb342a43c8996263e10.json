{"ast":null,"code":"export const calculateEncounterStrength = party => {\n  // Base ES calculation: 4 + (2 * level) per hero\n  const baseES = party.heroCount * (4 + 2 * party.heroLevel);\n\n  // Add ES for Victories: every 2 Victories = +1 hero's ES\n  const victoryBonus = Math.floor(party.victories / 2) * (4 + 2 * party.heroLevel);\n  return baseES + victoryBonus;\n};\nexport const determineEncounterDifficulty = (partyES, encounterEV, partyLevel) => {\n  // Calculate one hero's ES based on actual party level\n  const oneHeroES = 4 + 2 * partyLevel;\n  const threeHeroES = oneHeroES * 3;\n  if (encounterEV < partyES - oneHeroES) {\n    return 'trivial';\n  } else if (encounterEV < partyES) {\n    return 'easy';\n  } else if (encounterEV <= partyES + oneHeroES) {\n    return 'standard';\n  } else if (encounterEV <= partyES + threeHeroES) {\n    return 'hard';\n  } else {\n    return 'extreme';\n  }\n};\nexport const getDifficultyColor = difficulty => {\n  switch (difficulty) {\n    case 'trivial':\n      return '#4ade80';\n    // green\n    case 'easy':\n      return '#22c55e';\n    // green-500\n    case 'standard':\n      return '#eab308';\n    // yellow\n    case 'hard':\n      return '#f97316';\n    // orange\n    case 'extreme':\n      return '#ef4444';\n    // red\n    default:\n      return '#6b7280';\n    // gray\n  }\n};","map":{"version":3,"names":["calculateEncounterStrength","party","baseES","heroCount","heroLevel","victoryBonus","Math","floor","victories","determineEncounterDifficulty","partyES","encounterEV","partyLevel","oneHeroES","threeHeroES","getDifficultyColor","difficulty"],"sources":["/Users/aaronbode/Development/projects/encounter_builder/encounter-builder/src/utils/encounterCalculations.ts"],"sourcesContent":["import { Party } from '../types';\n\nexport const calculateEncounterStrength = (party: Omit<Party, 'encounterStrength'>): number => {\n  // Base ES calculation: 4 + (2 * level) per hero\n  const baseES = party.heroCount * (4 + (2 * party.heroLevel));\n  \n  // Add ES for Victories: every 2 Victories = +1 hero's ES\n  const victoryBonus = Math.floor(party.victories / 2) * (4 + (2 * party.heroLevel));\n  \n  return baseES + victoryBonus;\n};\n\nexport const determineEncounterDifficulty = (partyES: number, encounterEV: number, partyLevel: number): 'trivial' | 'easy' | 'standard' | 'hard' | 'extreme' => {\n  // Calculate one hero's ES based on actual party level\n  const oneHeroES = 4 + (2 * partyLevel);\n  const threeHeroES = oneHeroES * 3;\n  \n  if (encounterEV < partyES - oneHeroES) {\n    return 'trivial';\n  } else if (encounterEV < partyES) {\n    return 'easy';\n  } else if (encounterEV <= partyES + oneHeroES) {\n    return 'standard';\n  } else if (encounterEV <= partyES + threeHeroES) {\n    return 'hard';\n  } else {\n    return 'extreme';\n  }\n};\n\nexport const getDifficultyColor = (difficulty: string): string => {\n  switch (difficulty) {\n    case 'trivial':\n      return '#4ade80'; // green\n    case 'easy':\n      return '#22c55e'; // green-500\n    case 'standard':\n      return '#eab308'; // yellow\n    case 'hard':\n      return '#f97316'; // orange\n    case 'extreme':\n      return '#ef4444'; // red\n    default:\n      return '#6b7280'; // gray\n  }\n}; "],"mappings":"AAEA,OAAO,MAAMA,0BAA0B,GAAIC,KAAuC,IAAa;EAC7F;EACA,MAAMC,MAAM,GAAGD,KAAK,CAACE,SAAS,IAAI,CAAC,GAAI,CAAC,GAAGF,KAAK,CAACG,SAAU,CAAC;;EAE5D;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAACO,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,GAAI,CAAC,GAAGP,KAAK,CAACG,SAAU,CAAC;EAElF,OAAOF,MAAM,GAAGG,YAAY;AAC9B,CAAC;AAED,OAAO,MAAMI,4BAA4B,GAAGA,CAACC,OAAe,EAAEC,WAAmB,EAAEC,UAAkB,KAA2D;EAC9J;EACA,MAAMC,SAAS,GAAG,CAAC,GAAI,CAAC,GAAGD,UAAW;EACtC,MAAME,WAAW,GAAGD,SAAS,GAAG,CAAC;EAEjC,IAAIF,WAAW,GAAGD,OAAO,GAAGG,SAAS,EAAE;IACrC,OAAO,SAAS;EAClB,CAAC,MAAM,IAAIF,WAAW,GAAGD,OAAO,EAAE;IAChC,OAAO,MAAM;EACf,CAAC,MAAM,IAAIC,WAAW,IAAID,OAAO,GAAGG,SAAS,EAAE;IAC7C,OAAO,UAAU;EACnB,CAAC,MAAM,IAAIF,WAAW,IAAID,OAAO,GAAGI,WAAW,EAAE;IAC/C,OAAO,MAAM;EACf,CAAC,MAAM;IACL,OAAO,SAAS;EAClB;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAIC,UAAkB,IAAa;EAChE,QAAQA,UAAU;IAChB,KAAK,SAAS;MACZ,OAAO,SAAS;IAAE;IACpB,KAAK,MAAM;MACT,OAAO,SAAS;IAAE;IACpB,KAAK,UAAU;MACb,OAAO,SAAS;IAAE;IACpB,KAAK,MAAM;MACT,OAAO,SAAS;IAAE;IACpB,KAAK,SAAS;MACZ,OAAO,SAAS;IAAE;IACpB;MACE,OAAO,SAAS;IAAE;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}